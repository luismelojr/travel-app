FROM php:8.3-fpm as base

# Instalar dependências do sistema
RUN apt-get update && apt-get install -y \
    git \
    curl \
    libpng-dev \
    libonig-dev \
    libxml2-dev \
    zip \
    unzip \
    nodejs \
    npm \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*

# Instalar extensões PHP
RUN docker-php-ext-install pdo_mysql mbstring exif pcntl bcmath gd

# Stage para desenvolvimento com Xdebug
FROM base as development

# Instalar Xdebug para cobertura de testes e debug
RUN pecl install xdebug \
    && docker-php-ext-enable xdebug

# Copiar configuração customizada do Xdebug
COPY docker/xdebug.ini /usr/local/etc/php/conf.d/99-xdebug.ini

# Instalar Composer
COPY --from=composer:latest /usr/bin/composer /usr/bin/composer

# Criar usuário para aplicação
RUN groupadd -g 1000 www \
    && useradd -u 1000 -ms /bin/bash -g www www


# Definir diretório de trabalho
WORKDIR /var/www/html

# Mudar ownership dos diretórios de trabalho para o usuário www
RUN chown -R www:www /var/www/html

# Expor porta 8000
EXPOSE 8000

# Comando padrão
CMD ["php", "artisan", "serve", "--host=0.0.0.0", "--port=8000"]

# Stage para produção sem Xdebug
FROM base as production

# Instalar Composer
COPY --from=composer:latest /usr/bin/composer /usr/bin/composer

# Criar usuário para aplicação
RUN groupadd -g 1000 www \
    && useradd -u 1000 -ms /bin/bash -g www www


# Definir diretório de trabalho
WORKDIR /var/www/html

# Copiar aplicação
COPY --chown=www:www . .

# Instalar dependências
RUN composer install --no-dev --optimize-autoloader

# Mudar ownership dos diretórios de trabalho para o usuário www
RUN chown -R www:www /var/www/html

# Expor porta 8000
EXPOSE 8000

# Comando padrão
CMD ["php", "artisan", "serve", "--host=0.0.0.0", "--port=8000"]